class u{#a=!0;#i=[];#s=10;silent(r){typeof r!="boolean"&&this.#e("silent","silent-boolean"),this.#a=r}isSilent(){return this.#a}#h(r,e,i,t){let a,s={"input-check":100,"invalid-check":101,"invalid-option":102,"array-option":103,"object-range":105,"from-missing":106,"to-missing":107,"number-from":108,"number-to":109,"silent-boolean":110,"min-value":111,"check-fail":200,"option-fail":201,"range-fail":202,"range-type":203};return a={100:`Error: (${r}) Missing data type.`,101:`Error: (${r}) Invalid data type. See the docs.`,102:`Error: (${r}) Invalid value. See the docs.`,103:`Error: (${r}) Expected an array.`,105:`Error: (${r}) Expected an object with "from" and "to".`,106:`Error: (${r}) Key "from" is missing.`,107:`Error: (${r}) Key "to" is missing.`,108:`Error: (${r}) "from" must be a number.`,109:`Error: (${r}) "to" must be a number.`,110:`Error: (${r}) Expected a boolean.`,111:`Error: (${r}) Must be a number greater than or equal to 1.`,200:`Check failed: (${r}) Type mismatch. Expected "${i}", got "${t}".`,201:`Check failed: (${r}) Value "${i}" not found.`,202:`Check failed: (${r}) Value "${i}" is out of range.`,203:`Check failed: (${r}) Only "number" or "bigint" allowed.`}[s[e]],a}#u(r,e,i,t){let a,s;const f=this.#f(t);if(f!==!1?a=f:a=(typeof t).charAt(0).toUpperCase()+(typeof t).slice(1),s=this.#h(r,e,i,a),s=`${s} - ${new Date().toISOString()}`,this.#i.length>=this.#s)for(let h=this.#i.length;h>=this.#s;h--)this.#i.shift();this.#i.push(s)}#r(r,e,i,t){if(this.#u(r,e,i,t),this.#a===!0)return!1;this.#c(r,e,i,t)}#e(r,e,i,t){this.#u(r,e,i,t),this.#c(r,e,i,t)}#c(r,e,i,t){let a;const s=this.#f(t);throw s!==!1?a=s:a=(typeof t).charAt(0).toUpperCase()+(typeof t).slice(1),new Error(this.#h(r,e,i,a))}#n(r){return typeof r!="number"||!Number.isFinite(r)?this.#r("check","check-fail","Number",r):!0}#l(r){return typeof r!="string"?this.#r("check","check-fail","String",r):!0}#o(r){return typeof r!="boolean"?this.#r("check","check-fail","Boolean",r):!0}#y(r){return typeof r!="bigint"?this.#r("check","check-fail","BigInt",r):!0}#k(r){return typeof r<"u"?this.#r("check","check-fail","Undefined",r):!0}#p(r){return r!==null?this.#r("check","check-fail","Null",r):!0}#b(r){return typeof r!="symbol"?this.#r("check","check-fail","Symbol",r):!0}#d(r){return Array.isArray(r)?!0:this.#r("check","check-fail","Array",r)}#m(r){return typeof r!="object"||r===null||Array.isArray(r)?this.#r("check","check-fail","Object",r):!0}#g(r){return r!==1/0?this.#r("check","check-fail","Infinity",r):!0}#E(r){return r!==-1/0?this.#r("check","check-fail","-Infinity",r):!0}#S(r){return isNaN(r)?!0:this.#r("check","check-fail","NaN",r)}#v(r){if(r instanceof Date)try{if(String(r.getTime()).slice(0,10)===String(new Date().getTime()).slice(0,10))return!0}catch{}return this.#r("check","check-fail","Date",r)}#I(r){if(r instanceof RegExp)try{if(Array.isArray("validate".match(r)))return!0}catch{}return this.#r("check","check-fail","RegExp",r)}#N(r){if(r instanceof Map)try{if(r.set("test",1),r.get("test")===1)return!0}catch{}return this.#r("check","check-fail","Map",r)}#$(r){if(r instanceof Set)try{if(r.add(1),r.has(1))return!0}catch{}return this.#r("check","check-fail","Set",r)}#R(r){if(r instanceof WeakMap)try{let e={};if(r.set(e,1),r.get(e)===1)return!0}catch{}return this.#r("check","check-fail","WeakMap",r)}#x(r){try{let e={};if(r.add(e),r.has(e)===!0)return!0}catch{}return this.#r("check","check-fail","WeakSet",r)}#f(r){if(Array.isArray(r))return"Array";if(r===null)return"Null";if(r===1/0)return"Infinity";if(r===-1/0)return"-Infinity";if(typeof r=="number"&&isNaN(r))return"NaN";if(typeof r=="bigint")return"BigInt";try{if(r instanceof Date&&r.getTime()===new Date().getTime())return"Date"}catch{}try{if(r instanceof RegExp&&Array.isArray("validate".match(r)))return"RegExp"}catch{}try{if(r.set("test",1),r instanceof Map&&r.get("test")===1)return"Map"}catch{}try{let e={};if(r.set(e,1),r instanceof WeakMap&&r.get(e)===1)return"WeakMap"}catch{}try{if(r.add(1),r instanceof Set&&r.has(1))return"Set"}catch{}try{let e={};if(r.add(e),r instanceof WeakSet&&r.has(e)===!0)return"WeakSet"}catch{}return r instanceof Promise?"Promise":r instanceof Error&&/ Error\(/.test(r.constructor.toString())?"Error":r instanceof Error&&/ TypeError\(/.test(r.constructor.toString())?"TypeError":r instanceof Error&&/ URIError\(/.test(r.constructor.toString())?"URIError":r instanceof Error&&/ SyntaxError\(/.test(r.constructor.toString())?"SyntaxError":r instanceof Error&&/ ReferenceError\(/.test(r.constructor.toString())?"ReferenceError":r instanceof Error&&/ RangeError\(/.test(r.constructor.toString())?"RangeError":r instanceof Error&&/ EvalError\(/.test(r.constructor.toString())?"EvalError":!1}#w(r,e){let i=r.constructor.toString();const t=i.indexOf(" ");let a;return e==="class"&&(a=i.indexOf("{")),e==="function"&&(a=i.indexOf("(")),i.slice(t,a).trim()}check(r,e){arguments.length<2&&this.#e("check","input-check");let i;const t=e.toLowerCase();switch(["number","string","boolean","bigint","undefined","null","symbol","array","object","infinity","-infinity","nan","date","regexp","map","set","weakmap","weakset"].includes(t)||this.#e("check","invalid-check"),t){case"number":i=this.#n(r);break;case"string":i=this.#l(r);break;case"boolean":i=this.#o(r);break;case"bigint":i=this.#y(r);break;case"undefined":i=this.#k(r);break;case"null":i=this.#p(r);break;case"symbol":i=this.#b(r);break;case"array":i=this.#d(r);break;case"object":i=this.#m(r);break;case"infinity":i=this.#g(r);break;case"-infinity":i=this.#E(r);break;case"nan":i=this.#S(r);break;case"date":i=this.#v(r);break;case"regexp":i=this.#I(r);break;case"map":i=this.#N(r);break;case"set":i=this.#$(r);break;case"weakmap":i=this.#R(r);break;case"weakset":i=this.#x(r);break}return i}checkOptions(r,e){const i=["string","number","bigint","boolean","Infinity","-Infinity"];return!i.includes(typeof r)&&!i.includes(r)&&this.#e("checkOptions","invalid-option"),typeof r=="number"&&isNaN(r)&&this.#e("checkOptions","invalid-option"),Array.isArray(e)||this.#e("checkOptions","array-option"),e.includes(r)?!0:this.#r("checkOptions","option-fail",r)}#t(r){return!!(typeof r!="bigint"&&typeof r!="number"||typeof r=="number"&&isNaN(r))}checkRange(r,e){return typeof e!="object"&&this.#e("checkRange","object-range"),Object.keys(e).includes("from")||this.#e("checkRange","from-missing"),Object.keys(e).includes("to")||this.#e("checkRange","to-missing"),this.#t(e.from)&&this.#e("checkRange","number-from"),this.#t(e.to)&&this.#e("checkRange","number-to"),this.#t(r)?this.#r("checkRange","range-type"):r<e.from||r>e.to?this.#r("checkRange","range-fail",r):!0}getLastError(){return this.#i[this.#i.length-1]}maxErrorSize(r){this.#t(r)&&this.#e("maxErrorSize","min-value"),r<1&&this.#e("maxErrorSize","min-value"),this.#s=r}getErrors(){return this.#i}getType(r){let e,i=this.#f(r);return i!==!1?e=i:e=typeof r,e=e.toLowerCase(),e}}const c=new u;export{u as Validate};export default c;
